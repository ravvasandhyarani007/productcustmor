package com.example.demo.entities;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;

@Entity
public class Customer {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long cid;
	@Column
	private String cname;
	@OneToMany(mappedBy="customer",cascade=CascadeType.ALL ,fetch = FetchType.LAZY)
private List<Product> products;
	public Customer() {
		
	}
	public Customer(Long cid, String cname, List<Product> products) {
		super();
		this.cid = cid;
		this.cname = cname;
		this.products = products;
	}
	public Long getCid() {
		return cid;
	}
	public void setCid(Long cid) {
		this.cid = cid;
	}
	public String getCname() {
		return cname;
	}
	public void setCname(String cname) {
		this.cname = cname;
	}
	public List<Product> getProducts() {
		return products;
	}
	public void setProducts(List<Product> products) {
		this.products = products;
	}
	@Override
	public String toString() {
		return "Customer [cid=" + cid + ", cname=" + cname + ", products=" + products + "]";
	}
	
	 public void addProducts(Product products) {
	       
	            this.products.add(products);
	            products.add(this); // Ensures bidirectional consistency
	        }
	public void add(Customer customer) {
		// TODO Auto-generated method stub
		
	}
	
	
}


package com.example.demo.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;

@Entity
public class Product {
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long pid;
	@Column
	private String pname;
	@Column
	private int cost;
	@Column
	private String pquality;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="cid")
	private Customer customer;
	public Product() {
		
	}
	public Product(Long pid, String pname, int cost, String pquality, Customer customer) {
		super();
		this.pid = pid;
		this.pname = pname;
		this.cost = cost;
		this.pquality = pquality;
		this.customer = customer;
	}
	public Long getPid() {
		return pid;
	}
	public void setPid(Long pid) {
		this.pid = pid;
	}
	public String getPname() {
		return pname;
	}
	public void setPname(String pname) {
		this.pname = pname;
	}
	public int getCost() {
		return cost;
	}
	public void setCost(int cost) {
		this.cost = cost;
	}
	public String getPquality() {
		return pquality;
	}
	public void setPquality(String pquality) {
		this.pquality = pquality;
	}
	public Customer getCustomer() {
		return customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
	@Override
	public String toString() {
		return "Product [pid=" + pid + ", pname=" + pname + ", cost=" + cost + ", pquality=" + pquality + ", customer="
				+ customer + "]";
	}
	public void addCustomer(Customer customer) {
		// TODO Auto-generated method stub
		this.customer.add(customer);
        customer.add(customer);
	}
	public void add(Customer customer2) {
		// TODO Auto-generated method stub
		
	}
	
		
}



package com.example.demo.repository;

import org.springframework.data.jpa.repository.JpaRepository;


import com.example.demo.entities.Customer;

public interface Customerrepository extends JpaRepository<Customer,Long>{

}



package com.example.demo.repository;

import org.springframework.data.jpa.repository.JpaRepository;


import com.example.demo.entities.Product;

public interface Productrepository extends JpaRepository<Product,Long> {

}



package com.example.demo.service;

import java.util.List;

import com.example.demo.entities.Customer;

public interface Customerservice {
String saveCustomer(Customer c);
List<Customer> getAllCustomers();
Customer assignProductToCustomer(Long pid,Long cid);
}



package com.example.demo.service;

import java.util.List;
import java.util.Optional;

import com.example.demo.entities.Product;

public interface Productservice {
String saveProduct(Product p);
List<Product> getAllProducts();
String updateProduct(Product product,Long pid);
String deleteProduct(Long pid);
Optional<Product> getByProduct(Long pid);
}



package com.example.demo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entities.Customer;
import com.example.demo.entities.Product;
import com.example.demo.repository.Customerrepository;
import com.example.demo.repository.Productrepository;
@Service
public class Customerserviceimp implements Customerservice{
@Autowired
private Customerrepository customerrepository;
@Autowired
private Productrepository productrepository;

	public Customerserviceimp(Customerrepository customerrepository, Productrepository productrepository) {
	super();
	this.customerrepository = customerrepository;
	this.productrepository = productrepository;
}

	@Override
	public String saveCustomer(Customer c) {
		// TODO Auto-generated method stub
		customerrepository.save(c);
		return "customer details inserted";
	}

	@Override
	public List<Customer> getAllCustomers() {
		// TODO Auto-generated method stub
		List<Customer> l=customerrepository.findAll();
		return l;
	}
	public Customer assignProductToCustomer(Long pid, Long cid) {
		// TODO Auto-generated method stub
		Product product=productrepository.findById(pid).get();
		Customer customer=customerrepository.findById(cid).get();
		product.setCustomer(customer);
		productrepository.save(product);
		return customer;
	}
}



package com.example.demo.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entities.Product;
import com.example.demo.repository.Productrepository;
@Service
public class Productserviceimp implements Productservice{
	@Autowired
private Productrepository productrepository;
	
	public Productserviceimp(Productrepository productrepository) {
		super();
		this.productrepository = productrepository;
	}

	@Override
	public String saveProduct(Product p) {
		// TODO Auto-generated method stub
		productrepository.save(p);
		return "product inserted";
	}

	@Override
	public List<Product> getAllProducts() {
		// TODO Auto-generated method stub
		List<Product> li=productrepository.findAll();
		return li;
	}

	@Override
	public String updateProduct(Product product, Long pid) {
		// TODO Auto-generated method stub
		Product pdt=productrepository.findById(pid).get();
		pdt.setPname(product.getPname());
		pdt.setPquality(product.getPquality());
		pdt.setCost(product.getCost());
		productrepository.save(pdt);
		return "product updated";
	}

	@Override
	public String deleteProduct(Long pid) {
		// TODO Auto-generated method stub
		productrepository.deleteById(pid);
		return "product deleted";
	}

	@Override
	public Optional<Product> getByProduct(Long pid) {
		// TODO Auto-generated method stub
		      return  productrepository.findById(pid);

}
}



package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Customer;
import com.example.demo.service.Customerserviceimp;

@RestController
@RequestMapping("/api/customer")
public class Customercontroller {
@Autowired
private Customerserviceimp customerserviceimp;

public Customercontroller(Customerserviceimp customerserviceimp) {
	super();
	this.customerserviceimp = customerserviceimp;
}
@PostMapping("/addcustomer")
public ResponseEntity<String> saveCustomer(@RequestBody Customer c){
	customerserviceimp.saveCustomer(c);
	return new ResponseEntity<>("customer details inserted",HttpStatus.CREATED);
}
@GetMapping("/detail")
public List<Customer> getAllCustomers(){
	List<Customer> l=customerserviceimp.getAllCustomers();
	return l;
}
@PutMapping("/assign/{pid}/{cid}")
public ResponseEntity<Customer> assignProductToCustomer(@PathVariable("pid") Long pid,@PathVariable("cid") Long cid){
	Customer c=customerserviceimp.assignProductToCustomer(pid, cid);
	return new ResponseEntity<Customer>(c,HttpStatus.ACCEPTED);
} 
		
		
		
	}




package com.example.demo.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Product;
import com.example.demo.service.Productserviceimp;
@RestController
@RequestMapping("/api/product")
public class Productcontroller {
	@Autowired
private Productserviceimp productserviceimp;

public Productcontroller(Productserviceimp productserviceimp) {
	super();
	this.productserviceimp = productserviceimp;
}
@PostMapping("/addproduct")
public ResponseEntity<String> saveProduct(@RequestBody Product p){
	productserviceimp.saveProduct(p);
	return new ResponseEntity<> ("product inserted",HttpStatus.CREATED);
}
@GetMapping("/details")
public List<Product> getAllProducts(){
	List<Product> li=productserviceimp.getAllProducts();
	return li;
}
@PutMapping("/updateproduct/{pid}")
public ResponseEntity<String> updateProduct(@PathVariable("pid") Long pid,@RequestBody Product product){
	productserviceimp.updateProduct(product, pid);
	return new ResponseEntity<>("product updated",HttpStatus.OK);
}
@DeleteMapping("/deleteproduct/{pid}")
public ResponseEntity<String> deleteProduct(@PathVariable("pid") Long pid){
	productserviceimp.deleteProduct(pid);
	return new ResponseEntity<>("product deleted",HttpStatus.ACCEPTED);
}

	 @GetMapping("/{pid}")
	    public ResponseEntity<Product> getProductById(@PathVariable Long pid) {
	        // Call the service to get the product
	        Optional<Product> product = productserviceimp.getByProduct(pid);

	        // Check if the product is present
	        if (product.isPresent()) {
	            return ResponseEntity.ok(product.get());
	        } else {
	            // Return 404 NOT FOUND if product is not present
	            return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
	        }
	    }

}




spring.application.name=springproduct
server.port=8076
spring.datasource.url=jdbc:mysql://localhost:3306/crud
spring.datasource.username=root
spring.datasource.password=sravani65
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

